数组array：可以存放多个同一类型的数据。数组也是一种数据类型（引用类型），就是一组数据
           数组可以通过for循环来遍历，得到数组的所有元素的和
           通过 数组[下标] 来访问数组元素，下标从0开始编号
           声明数组：double[] 数组名 = { 数组元素 };
           可以通过 数组名.length 得到数组长度
数组的使用：动态初始化：定义 int a[] = new int[5];//创建一个数组，名字为a，存放5个int
                      使用 数组名[下标] 使用a数组的第2个数 a[1]
                      输入数组元素 数组名[下标] = sc.nextDouble();
                      定义 int a[];  a=new int[5];
           静态初始化：int a[]={数组元素}；
数组：是多个相同类型数据的组合，实现对这些数据的统一管理
     元素可以是任意数据类型，包括基本类型和引用类型，但是不能混用
     数组创建后如果没有赋值，有默认值（布尔类型默认值为false）
     使用步骤：声明数组并开辟空间；给各个元素赋值；使用数组
     下标从0开始
     下标必须在指定范围内使用，否则报下标越界异常
     数组型数据本质是对象
数组赋值机制：在默认情况下赋值方式为引用传递，赋的值是地址；基本数据类型的赋值方式为值拷贝   
             arr2 = arr1;  改变arr2，arr1也会改变，arr1和arr2指向同一个地址
数组拷贝：内容复制，数据空间独立
         int arr2[] = new int[arr1.length];
         arr2[i]=arr1[i];
数组添加扩容：添加元素，新建一个数组
冒泡排序：通过对待排序序列从后向前（从下标较大的元素开始），依次比较相邻元素的值，若发现逆序则交换，使值较大的元素逐渐从前移向后部
查找：顺序查找；二分查找
二维数组：int[][] arr = new int[4][5]
int[][] arr = new int[3][] :创建二维数组，但是没给每个一维数组开空间
二维数组静态初始化：int[][] arr = {{1,2},{1,2,3},...,{100}}
二维数组声明：int[][] y       int[] y[]      int y[][]
