嵌套分支：在一个分支结构中又完整地嵌套了另一个完整的分支结构，里面的分支的结构称为内层分支，外面的分支结构称为外层分支
switch分支结构：switch关键字，表示switch分支
               swtich后的表达式对应一个值
               case 常量：当表达式的值等于常量，就执行语句块
               break：表示退出switch，如果某个模块没有break就不退出switch
               如果case 常量与表达式的值匹配，就执行对应语句块，否则就继续匹配下一个常量
               如果一个都不匹配，则执行default
switch细节：表达式数据类型应和case后的常量一致，或者是可以自动转成可相互比较的类型
           表达式中的返回值必须是byte、short、int、char、enum、String
           case字句中的值必须是常量或常量表达式而不能是变量
           default是可选的，没有匹配的case时执行default，如果没有default有没有匹配任何常量，则没有输出
           如果没有写break，程序会顺序执行到switch结尾
建议使用switch：判断的具体数值不多，且数据类型符合byte、short、int、char、enum、String
建议使用if：对区间判断，对结果为boolean类型判断
for循环：for关键字，表示循环控制
        for有四要素：变量初始化；循环条件；循环操作；循环变量迭代
for细节：循环条件是返回一个布尔值的表达式
        循环判断条件中的初始化和变量迭代可以写到其他地方，但是两边分号不能省略（；；表示一个无限循环）
        循环初始值可以有多条语句，但要求类型一样，中间用，隔开
        循环变量迭代也可以用多条语句，中间用，隔开
while循环：也有四要素，但放置位置不同
while是先判断再执行语句
do while循环：也有四要素，但放置位置不同
             先执行再判断，即至少一定会执行一次
             最后有一个分号；
break跳转控制语句：当某个条件满足时，终止循环，一般用在switch或循环中
break语句出现在多层嵌套的语句块中，可以通过标签指明要终止的是哪一层语句块，如果没有指定，默认退出最近的循环体
标签添加在循环开始前 label1:
字符串的内容比较使用equals
continue语句用于结束本次循环，继续执行下一次循环
return表示跳出所在的方法，如果return写在main方法，会退出程序
while(true)表示死循环