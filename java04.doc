运算符是一种特殊符号，表示数据的运算、赋值和比较等
算数运算符：对数值型变量进行运算
注释快捷键：ctrl + /
a % b = a - a / b * b
自增：++
    作为独立语句使用：前++和后++完全等价于i=i+1
    作为表达式使用：++i表示先自增再赋值；i++表示先赋值再自增
i = i++：temp=i;    i=i+1;      i=temp;
i = ++i: i=i+1;     temp=1;     i=temp;
关系运算符：结果都是boolean类型。经常用在if结构和循环结构的条件语句中
逻辑运算符：用于连接多个条件（多个关系表达式），最终的结果是boolean值
短路与&&：如果第一个条件为false，则第二个条件不会判断，最终结果为false
逻辑与&：不管第一个条件是否为false，第二个条件都要判断
短路或||：如果第一个条件为true，则第二个条件不会判断，最终结果为true
逻辑或|：不管第一个条件是否为true，第二个条件都要判断
非！：如果条件成立，结果为false
异或^：a与b不同时，结果为true
赋值运算符：将某个运算后的值赋给指定的变量，运算顺序从右往左，左边只能是变量，右边可以是变量、表达式、常量值
复合赋值运算符：a += b 等价于 a = a + b ，同时会进行类型转换，如果变量类型为byte，右侧进行运算后为int类型，会自动强制转换为左侧变量声明的byte类型
三元运算符：条件表达式？表达式1：表达式2；
        如果条件表达式为true，运算后的结果为表达式1；表达式1和2要为可以赋给接收变量的类型（或可以自动转换或手动强制转换）
运算符优先级：（）、{}；单目运算++、--；算术运算符；位移运算符；比较运算符；逻辑运算符；三元运算符；赋值运算符
标识符命名的规则和规范：
    规则：由字母、数字、_或$组成；数字不可以开头；不可以使用关键字和保留字；严格区分大小写，长度无限制；不能包含空格
    规范：包名：多单词组成时所有字母都小写
          类名接口名：多单词组成时各单词首字母大写
          变量名方法名：多单词组成时第一个单词首字母小写，第二个单词开始首字母大写
          常量名：所有字母都大写，多单词时用下划线连接
键盘输入语句：需要一个扫描器（对象），就是Scanner
    (1)导入该类的所在包，java.util.Scanner
    (2)创建该类对象（声明变量）
    (3)调用里面功能
进制：二进制以0b或0B开头，八进制以0开头，十六进制以0x或0X开头
进制转换：二进制转十进制：从右边开始将每个位上的数提取出来乘以2的位数-1次方再相加
         八进制转十进制：从右边开始将每个位上的数提取出来乘以8的位数-1次方再相加
         十六进制转十进制：从右边开始将每个位上的数提取出来乘以16的位数-1次方再相加
         十进制转二进制：将该数不断除以2直至商0，然后将每一步的余数倒过来
         十进制转八进制：将该数不断除以8直至商0，然后将每一步的余数倒过来
         十进制转十六进制：将该数不断除以16直至商0，然后将每一步的余数倒过来
         二进制转八进制：从右边开始每三位一组转化成相应的八进制数
         二进制转十六进制：从右边开始每四位一组转化成相应的十六进制数
         八进制转二进制：每一位数转成相应的三位的二进制数
         十六进制转二进制：每一位数转成相应四位的二进制数
原码、反码、补码：二进制的最高位是符号位，0表示正数，1表示负数
                正数的原码、反码、补码都一样
                负数的反码：原码符号位不变，其他位取反
                负数的补码=反码+1
                0的补码反码都是0
                java中的数都有符号
                计算机以补码的方式运算
                看运算结果要看原码
位运算：~：按位取反
       &：按位与
       |：按位或
       ^：按位异或
       >>：算术右移：低位溢出，符号位不变，并用符号位补溢出的高位
       <<：算术左移：符号位不变，低位补0
       >>>：逻辑右移（无符号右移）：低位溢出，高位补0 